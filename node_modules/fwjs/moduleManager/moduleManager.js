/* 
 * Module Manager.
 * Build routes configuration / Route request.
 * 
 */

var jhtml = require('jhtml');
var moduleManager = function( application ){
    this.app = application;
    this.modules = {};
    this.templates = {};    
};

moduleManager.prototype.configure = function(config){
    this.config = config;
    if( this.config.module instanceof Object ){
        for( var module in this.config.module )
            this.loadModule(module,require(this.config.module[module]));
    }
};

moduleManager.prototype.loadModule = function(name,mConfig){
    if( !this.modules[name] ){
        this.modules[name]={controllers:{},plugins:{}};
        if( mConfig.controllers )
            this.modules[name].controllers = mConfig.controllers;
        if( mConfig.plugins )
            this.modules[name].controllers = mConfig.plugins;
        if( mConfig.templates ){
            var self=this;
            jhtml.createAll(mConfig.templates,function(templates){ self.templates=templates; });
        }
        if( mConfig.event ){
            for( var event in mConfig ){
                this.app.on(event,mConfig[event].priority,mConfig[event].function);
            }
        }
    }
};

moduleManager.prototype.getCtrl = function(module,controller){
    if( this.modules[module] && this.modules[module][controller] ){
        if( typeof(this.modules[module][controller]) === 'string' )
            this.modules[module][controller] = new require(this.modules[module][controller])(this.app);
        return this.modules[module][controller];
    }else
        throw new Error('module or controller does not exist.');
};

moduleManager.prototype.getPlugin = function(module,plugin){
    if( this.modules[module] && this.modules[module][plugin] ){
        if( typeof(this.modules[module][plugin]) === 'string' )
            this.modules[module][plugin] = new require(this.modules[module][plugin])(this.app);
        return this.modules[module][plugin];
    }else
        throw new Error('module or plugin does not exist.');
};

moduleManager.prototype.getTpl = function(tplName){
    if( this.templates && this.templates[tplName] ){
        if( typeof(this.templates[tplName]) === 'string' )
            this.templates[tplName] = require(this.templates[tplName]);
        return new this.templates[tplName](this.app);
    }else
        throw new Error('template does not exist.');
};

module.exports = moduleManager;