/* 
 * JHTML Templates generator.
 */

var fs = require('fs'),
    jhtml = function(){};
    
jhtml.prototype.jtpl = require('./jtpl.js');
jhtml.prototype.srcFolder = 'src';

jhtml.prototype.createAll = function( configuration, callback ){
    var evtStack = 0, args={};
        cb = function(){ args[arguments[0]]=arguments[1]; evtStack--; if(!evtStack) callback(args); };

    for( var name in configuration ){
        evtStack++;
        this.createJSFile(name,configuration[name],cb);
    }
};

jhtml.prototype.createJSFile = function( name, file, callback){
    var path = file.split( this.srcFolder+'/' )[0];
    fs.exists( path+name+'.tpl.js',function(exist){
        if(!exist){
            fs.exists( file, function(exist){
                if( !exist )
                    throw new Error('Template source file does not exists');
                var src = fs.readFileSync( file,{ encoding:'utf8'});
                var fn = this.parseJHTML(src,name);
                fs.writeFileSync(path+name+'.tpl.js',fn,{encoding:'utf8'});
                callback(name,path+name+'.tpl.js');
            });
        }else
            callback(name,path+name+'.tpl.js');
    });
};

jhtml.prototype.parseJHTML = function( jhtml, templateName ){
    
    var fnCode = '', matches= [],
        startRgx = new RegExp('((if|for)\\(((?!\\)\\s*:).)*\\)\\s*:)','g'),
        elseRgx = new RegExp('else\\s*:','g'),
        elseifRgx = new RegExp('(else\\s*if\\s*\\(((?!\\)\\s*:).)*\\)\\s*:)','g'),
        endRgx = new RegExp('endfor;|endif;','g');
            
    var src = jhtml.replace(new RegExp('\n|\t|\r','g'),'').replace(new RegExp('>\\s*<','g'),'><'),
        srcArray = src.split(new RegExp('(<\\?js|\\?>)','g')),
        isJs = false;    
    
    for( var i=0; i<srcArray.length; i++){
        if( srcArray[i] !== '<?js' && srcArray[i] !== '?>' && !isJs )
            fnCode += 'jhtml+=\''+srcArray[i].replace("'","\'")+'\';';
        if( isJs && srcArray[i] !== '<?js' && srcArray[i] !== '?>'){
            
            matches = srcArray[i].match(startRgx);
            if(matches)
                for( var j=0; j<matches.length; j++ )
                    srcArray[i] = srcArray[i].replace( matches[j], matches[j].slice(0,-1)+'{' );
            
            matches = srcArray[i].match(elseifRgx);
            if(matches)
                for( var j=0; j<matches.length; j++ )
                    srcArray[i] = srcArray[i].replace( matches[j], '}'+matches[j].slice(0,-1)+'{' );
            
            fnCode += srcArray[i].replace('echo','jhtml+=')
                                        .replace(endRgx,'}')
                                        .replace(elseRgx,'}else{');
        }
        if( srcArray[i] === '<?js' )
            isJs = true;
        else if( srcArray[i] === '?>')
            isJs = false;
    }
    return   'var jtpl = require(\'jhtml\').jtpl;'
            +'var '+templateName+'= function(){jtpl.apply(this,arguments);};'
            +templateName+'.prototype= new jtpl();'
            +templateName+'.prototype.constructor='+templateName+';'
            +templateName+'.render = function(datas){var jhtml=\'\', datas=datas||this.datas; '+fnCode+' return jhtml; };'
            +'module.exports = '+templateName;
};
module.exports = jhtml;